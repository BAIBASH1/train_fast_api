version: '3.7'
services:
  db:
    image: postgres:15
    container_name: booking_db
    env_file:
      - .env-non-dev
    ports:
      - 5432:5432

  redis:
    image: redis:7
    container_name: booking_redis

  bookings:
    image: bookings_app
    container_name: booking_app
    build:
      context: .
    env_file:
      - .env-non-dev
    depends_on:
      - db
      - redis
    command: ["/booking/docker_scripts/app.sh"]
    ports:
      - 8080:8000

  celery:
    image: bookings_celery
    build:
      context: .
    container_name: booking_celery
    command: ["/booking/docker_scripts/celery.sh", "celery"]
    env_file:
      - .env-non-dev
    depends_on:
      - redis
      - bookings

  flower:
    image: bookings_flower
    build:
      context: .
    container_name: booking_flower
    command: [ "/booking/docker_scripts/celery.sh", "flower"]
    env_file:
      - .env-non-dev
    depends_on:
      - celery
    ports:
      - 5555:5555

  prometheus:
    image: prom/prometheus:v2.43.0
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheusdata:/prometheus
    restart: unless-stopped
    ports:
      - 9090:9090

  grafana:
    image: grafana/grafana:9.4.7
    container_name: grafana
    volumes:
      - grafanadata:/var/lib/grafana
    restart: unless-stopped
    ports:
      - 3000:3000
volumes:
  postgresdata:
  grafanadata:
  prometheusdata:
